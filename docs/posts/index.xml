<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Clericpy</title>
    <link>https://clericpy.github.io/blog/posts/</link>
    <description>Recent content in Posts on Clericpy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Oct 2019 22:09:23 +0800</lastBuildDate>
    
	<atom:link href="https://clericpy.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>通过 Python &#43; Chrome cURL 重放 HTTP 请求</title>
      <link>https://clericpy.github.io/blog/posts/1/</link>
      <pubDate>Thu, 24 Oct 2019 22:09:23 +0800</pubDate>
      
      <guid>https://clericpy.github.io/blog/posts/1/</guid>
      <description>众所周知, 一条完整 cURL 命令, 基本可以完整涵盖一次 HTTP 请求的全部信息, 所以, 只要有一句 Curl 命令, 就足以向服务器发起一次完全一样的请求.
 一个 HTTP 请求有多常见?  百度知道答案的点赞 斗鱼直播的一次弹幕 github issues 的一次评论  换句话说, 只要拿到一段 cURL 命令, 就能够将类似上面的各路请求再次复现.
更进一步地说, 既然拿到了命令, 略微修改里面的参数便足以发起与上次请求内容相异的同类请求.
手把手做个实验 实验准备  安装 Python, 并搞一个可以解析 cURL 的库   pip install torequests -U
torequests &amp;gt;= 4.8.18, 刚修复了一个 \n 导致提交出错的 bug
  安装一个 Chrome 浏览器  实验步骤 from torequests.utils import curlparse import requests curlstring = r&#39;&#39;&#39;curl &#39;https://github.</description>
    </item>
    
  </channel>
</rss>